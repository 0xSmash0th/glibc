# Linker in binutils 2.26 and newer consolidates R_X86_64_JUMP_SLOT
# relocation with R_386_GLOB_DAT relocation against the same symbol.
libc.so: _Unwind_Find_FDE
libc.so: calloc
libc.so: free + REL R_386_GLOB_DAT
libc.so: malloc + REL R_386_GLOB_DAT
libc.so: memalign
libc.so: realloc
# pthread functions may be preempted by libpthread at run-time.
libc.so: __pthread_getspecific
libc.so: __pthread_key_create
libc.so: __pthread_once
libc.so: __pthread_rwlock_rdlock
libc.so: __pthread_rwlock_unlock
libc.so: __pthread_rwlock_wrlock
libc.so: __pthread_setcancelstate
libc.so: __pthread_setspecific
libc.so: __pthread_unwind
libc.so: _pthread_cleanup_pop_restore
libc.so: _pthread_cleanup_push_defer
libm.so: matherr
# The dynamic loader uses __libc_memalign internally to allocate aligned
# TLS storage. The other malloc family of functions are expected to allow
# user symbol interposition.
ld.so: __libc_memalign
ld.so: malloc
ld.so: calloc
ld.so: realloc
ld.so: free + REL R_386_GLOB_DAT
