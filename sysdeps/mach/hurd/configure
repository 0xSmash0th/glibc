 
# The default is now to use libio instead of stdio.
test $stdio = default && stdio=libio

# GNU libc on the Hurd is always reentrant.
DEFINES="$DEFINES -D_LIBC_REENTRANT"

# Don't bother trying to generate any glue code to be compatible with the
# existing system library, because we are the only system library.
inhibit_glue=yes

if test "x$prefix" != x; then
  echo "configure: warning: --prefix= (empty) is required for GNU/Hurd to work normally" 1>&2
fi

case "$machine" in
  i386*)
    # With --enable-libio, the default oldest ABI is 2.2.6;
    # without --enable-libio, the default oldest ABI is 2.0.
    # We only need a "yes" here if the oldest ABI supported will be < 2.2.6.
    if if test "$stdio" = libio; then
         test "$oldest_abi" != default && test "$oldest_abi" \< "2.2.6"
       else
         test "$oldest_abi" = default || test "$oldest_abi" \< "2.2.6"
       fi; then
      libc_cv_gcc_unwind_find_fde=yes
    fi
    ;;
esac

echo $ac_n "checking Hurd header version""... $ac_c" 1>&6
echo "configure:33: checking Hurd header version" >&5
if eval "test \"`echo '$''{'libc_cv_hurd_version'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 38 "configure"
#include "confdefs.h"
#include <hurd/version.h>
int main() {

#define NEED_VERSION 20020609
#if HURD_INTERFACE_VERSION < NEED_VERSION
# error Hurd version too old: HURD_INTERFACE_VERSION < NEED_VERSION
#endif
; return 0; }
EOF
if { (eval echo configure:49: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  libc_cv_hurd_version=ok
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  libc_cv_hurd_version=bad
fi
rm -f conftest*
fi

echo "$ac_t""$libc_cv_hurd_version" 1>&6
if test "x$libc_cv_hurd_version" != xok; then
  { echo "configure: error: Hurd headers not installed or too old" 1>&2; exit 1; }
fi
