2011-12-28  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* include/unistd.h: Defining __have_pipe2 as external variable.
	* io/Makefile: Added have_pipe2 object.
	* io/have_pipe2.c: Declaring __have_pipe2 variable.

2011-12-06  Andreas Schwab  <schwab@linux-m68k.org>

	[BZ #13472]
	* sysdeps/powerpc/fpu/e_hypot.c (twoM600): Correct value.

2011-11-18  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* math/libm-test.inc: Added more nerabyint tests.
	* sysdeps/powerpc/powerpc32/fpu/s_nearbyint.S: New file: nearbyint
	optimized for PPC32.
	* sysdeps/powerpc/powerpc32/fpu/s_nearbyintf.S: New file: nearbyintf
	optimized for PPC32.
	* sysdeps/powerpc/powerpc64/fpu/s_nearbyint.S: New file: nearbyint
	optimized for PPC64.
	* sysdeps/powerpc/powerpc64/fpu/s_nearbyintf.S: New file: nearbyintf
	optimized for PPC64.

2011-11-16  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/Makefile: Added locale-defines.sym generation.
	* sysdeps/powerpc/locale-defines.sym: Locale definitions for strcasecmp
	optimized code.
	* sysdeps/powerpc/powerpc32/power7/Makefile: New file: added unroll-loop
	option for strncasecmp/strncasecmp_l compilation.
	* sysdeps/powerpc/powerpc32/power7/strcasecmp.S: New file: strcasecmp
	optimization for PPC32.
	* sysdeps/powerpc/powerpc32/power7/strcasecmp_l.S: New file: strcasecmp_l
	optimization for PPC32.
	* sysdeps/powerpc/powerpc64/power7/Makefile: Added unroll-loop option for
	strncasecmp/strncasecmp_l compilation.
	* sysdeps/powerpc/powerpc64/power7/strcasecmp.S: New file: strcasecmp
	optimization for PPC64.
	* sysdeps/powerpc/powerpc64/power7/strcasecmp_l.S: New file: strcasecmp_l
	optimization for PPC64.

2011-11-07  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/fpu/math_private.h: Using inline assembly version
	of math functions ceil, trunc, floor, round, and sqrt, when
	avaliable on the platform.
	* sysdeps/powerpc/fpu/e_sqrt.c: Undefine __ieee754_sqrt to avoid
	name clash.
	* sysdeps/powerpc/fpu/e_sqrtf.c: Likewise.
	* sysdeps/powerpc/powerpc64/fpu/e_sqrt.c: Likewise.
	* sysdeps/powerpc/powerpc64/fpu/e_sqrtf.c: Likewise.

2011-10-22  Andreas Schwab  <schwab@linux-m68k.org>

	* sysdeps/ieee754/ldbl-128ibm/s_atanl.c: Include <math.h> before
	"math_private.h".

2011-10-12  Ulrich Drepper  <drepper@gmail.com>

	Add integration with gcc's -ffinite-math-only and optimize wrapper
	functions in libm.
	* sysdeps/powerpc/fpu/e_hypot.c: Add __*_finite alias.
	* sysdeps/powerpc/fpu/e_hypotf.c: Likewise.
	* sysdeps/powerpc/fpu/e_sqrt.c: Likewise.
	* sysdeps/powerpc/fpu/e_sqrtf.c: Likewise.
	* sysdeps/powerpc/powerpc64/fpu/e_sqrt.c: Likewise.
	* sysdeps/powerpc/powerpc64/fpu/e_sqrtf.c: Likewise.
	* sysdeps/ieee754/dbl-64/halfulp.c: Likewise.

2011-09-15  Andreas Schwab  <schwab@redhat.com>

	* sysdeps/powerpc/fpu/e_hypot.c (__ieee754_hypot): Use
	__ieee754_sqrt instead of sqrt.
	* sysdeps/powerpc/fpu/e_hypotf.c (__ieee754_hypotf): Use
	__ieee754_sqrtf instead of sqrtf.
	* sysdeps/powerpc/fpu/e_rem_pio2f.c (__ieee754_rem_pio2f): Use
	__floorf instead of floorf.
	* sysdeps/powerpc/fpu/k_rem_pio2f.c (__fp_kernel_rem_pio2f): Use
	__floorf, __truncf instead of floorf, truncf.

2011-08-18  David Flaherty  <flaherty@linux.vnet.ibm.com>

	* sysdeps/ieee754/ldbl-128ibm/s_fmal.c: New file which checks
	for finite and infinity parameters.

2011-08-15  Alan Modra  <amodra@gmail.com>

	PR 13092
	* sysdeps/powerpc/Makefile (gmon): Move sysdep_routines to..
	* sysdeps/powerpc/powerpc64/Makefile (gmon): ..here..
	* sysdeps/powerpc/powerpc32/Makefile (gmon): ..and here.  Add
	ppc_mcount to static-only-routines.
	* sysdeps/powerpc/powerpc32/Versions: Export GLIBC_PRIVATE
	__mcount_internal.
	* sysdeps/powerpc/powerpc32/ppc-mcount.S (_mcount): Call
	__mcount_internal with usual JUMPTARGET.  Remove useless nop.

2011-08-04  Will Schmidt  <will_schmidt@vnet.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/strncmp.S: Adjust the alignment
	and add nop instructions for throughput optimization.
	* sysdeps/powerpc/powerpc64/power7/strncmp.S: Adjust the alignment
	and nop instructions for throughput optimization.

2011-08-01  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/fpu/e_hypot.c: New file: hypot optimized for POWER.
	* sysdeps/powerpc/fpu/e_hypotf.c: New file: hypotf optimized for POWER.
	* sysdeps/powerpc/fpu/e_rem_pio2f.c: New file: optimized for POWER.
	* sysdeps/powerpc/fpu/k_rem_pio2f.c: Likewise.
	* sysdeps/powerpc/fpu/k_cosf.c: Likewise.
	* sysdeps/powerpc/fpu/k_sinf.c: Likewise.
	* sysdeps/powerpc/fpu/s_cosf.c: Likewise.
	* sysdeps/powerpc/fpu/s_sinf.c: Likewise.
	* sysdeps/powerpc/fpu/s_scalbnf.c: Likewise.
	* sysdeps/powerpc/fpu/s_float_bitwise.h: new file: bitwise operation over
	floats optimized for POWER7.

2011-07-28  Will Schmidt  <will_schmidt@vnet.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/memcpy.S: Optimize the
	aligned copy for power7 with vector-scalar instructions.

	* sysdeps/powerpc/powerpc64/power7/memcpy.S: Optimize the
	aligned copy for power7 with vector-scalar instructions.

2011-06-30  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* nptl/sysdeps/unix/sysv/linux/aio_misc.h
	(__aio_create_helper_thread): Remove call to
	pthread_attr_setstacksize () which set the stacksize to
	PTHREAD_STACK_MIN.  This is too small if large amounts of TLS are in
	use.  Removing this call effectively sets stacksize to 'default'.

2011-05-25  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/dl-librecon.h
	(EXTRA_LD_ENVVARS_11): Fix condition where there's an extra slash in
	the search path, i.e., "//" when LD_AT_PLATFORM= or
	LD_AT_PLATFORM="".
	(EXTRA_UNSECURE_ENVVARS): Add LD_AT_PLATFORM to the list.

2011-05-18  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/powerpc/powerpc64/Makefile (no-special-regs): Add -mno-vsx
	and -mno-altivec to prevent the compiler from using Altivec and/or
	VSX instructions when the corresponding registers are not available.

2011-03-28  Andreas Schwab  <schwab@linux-m68k.org>

	* sysdeps/powerpc/powerpc32/power4/strncmp.S: Don't read past
	differing bytes.
	* sysdeps/powerpc/powerpc64/power4/strncmp.S: Likewise.
	* sysdeps/powerpc/powerpc32/power7/strncmp.S: Likewise.
	* sysdeps/powerpc/powerpc64/power7/strncmp.S: Likewise.

2011-03-15  Alan Modra  <amodra@gmail.com>

	* elf/dl-reloc.c (_dl_try_allocate_static_tls <TLS_DTV_AT_TP>): Handle
	l_tls_firstbyte_offset non-zero.  Save padding offset in
	l_tls_firstbyte_offset for later use.  Add debug print.
	* elf/dl-close.c (_dl_close_worker <TLS_DTV_AT_TP>): Correct code
	freeing static tls block.  Add debug print.
	* elf/fl-tls.c (_dl_determine_tlsoffset): Add debug print.

2011-02-16  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/unix/sysv/linux/powerpc/powerpc64/sysdep.h:
	(INTERNAL_VSYSCALL_NCS INTERNAL_SYSCALL_NCS): Remove erroneous (int)
	cast from r3.
	* sysdeps/wordsize-64/Makefile: New file.  Add tst-writev to
	'tests' variable.
	* sysdeps/wordsize-64/tst-writev.c: New file.

2011-02-16  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/powerpc/powerpc64/power7/Makefile: New file which adds
	-mno-vsx to the CFLAGS-rtld.c variable to avoid using VSX registers and
	insns in _dl_start to prevent a TOC reference before relocs are
	resolved.

2011-02-11  Jakub Jelinek  <jakub@redhat.com>

	* stdio-common/printf-parsemb.c (__parse_one_specmb): Handle
	arginfo fn returning -1.

	* stdio-common/_i18n_number.h (_i18n_number_rewrite): Ensure decimal
	and thousands string is zero terminated.

2010-11-10  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/ieee754/ldbl-128ibm/e_sqrtl.c (__ieee754_sqrtl): Force
	  signed comparison.

2010-11-04  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/mempcpy.S: New file.
	* sysdeps/powerpc/powerpc64/power7/mempcpy.S: New file.

2010-10-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* config.h.in: Added HAVE_PPC64_PT_GNU_STACK which is set during a
	configure test to determine whether the the $(CC) compiler defaults to
	PT_GNU_STACK support for PPC64.
	* elf/Makefile (($objpfx)check-execstac:): Replaced $(native-compile)
	with an operation which does the same thing but searches sysdeps/ for
	the testcase before settling on elf/check-execstack.c.  This allows
	overriding in sysdeps/powerpc/powerpc64/check-execstack.c.
	* elf/dl-load.c (_dl_map_object_from_fd): Replace PF_R|RF_W|PF_X with
	_STACK_FLAGS, defined in stackinfo.h.
	* elf/dl-support.c (_dl_stack_flags): Likewise.
	* elf/rtld.c (_rtld_global): Likewise.
	* sysdeps/generic/stackinfo.h: Define _STACK_FLAGS = PF_R|PF_W|PF_X.
	Define _STACKINFO_H.
	* sysdeps/i386/stackinfo.h: Include <sysdeps/generic/stackinfo.h> and
	remove #define _STACKINFO_H.
	* sysdeps/ia64/stackinfo.h: Likewise.
	* sysdeps/s390/stackinfo.h: Likewise.
	* sysdeps/sh/stackinfo.h: Likewise.
	* sysdeps/sparc/stackinfo.h: Likewise.
	* sysdeps/x86_64/stackinfo.h: Likewise.
	* sysdeps/powerpc/stackinfo.h: Define _STACK_FLAGS as PF_R|PF_W, i.e.,
	nonexecutable, on PowerPC64, but PF_R|PF_W|PF_X on PowerPC32.
	* sysdeps/powerpc/powerpc64/check-execstack.c: New file which checks
	the test executable to make sure it doesn't have PT_GNU_STACK set and
	then checks the executable to see if the mapfile indicates that
	the [stack] is nonexecutable.
	* sysdeps/powerpc/powerpc64/configure: Regenerated.
	* sysdeps/powerpc/powerpc64/configure.in: Added fragment to test for
	PT_GNU_STACK default in the compiler.  It sets HAVE_PPC64_PT_GNU_STACK.

2010-10-16  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Add IEEE quad long double fmal tests.
	* sysdeps/ieee754/ldbl-128/s_fmal.c (__fmal): Ensure a1 + u.d
	computation is not scheduled after fetestexcept.  Fix value
	of minimum denormal long double.

2010-10-19  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* bits/mathdef.h (FP_FAST_FMA): If the GCC 4.6 port has fast fma
	builtins, define the macros in the C99 standard.
	(FP_FAST_FMAF): Likewise.
	(FP_FAST_FMAL): Likewise.
	* sysdeps/powerpc/bits/mathdef.h (FP_FAST_FMA): Define, ppc as
	multiply/add.
	(FP_FAST_FMAF): Likewise.

2010-10-15  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Some new testcases.
	* sysdeps/ieee754/ldbl-128/s_fmal.c: New file.
	* sysdeps/ieee754/ldbl-96/s_fma.c (__fma): Fix fma with finite x and
	y and infinite z.  Do multiplication by C already in long double.
	* sysdeps/ieee754/ldbl-96/s_fmal.c: New file.
	* sysdeps/ieee754/dbl-64/s_fma.c (__fma): Fix fma with finite x and
	y and infinite z.  Do bitwise or of inexact bit into u.d.
	* sysdeps/ieee754/ldbl-64-128/s_fmal.c: New file.
	* sysdeps/i386/fpu/s_fmaf.S: Removed.
	* sysdeps/i386/fpu/s_fma.S: Removed.
	* sysdeps/i386/fpu/s_fmal.S: Removed.

2010-10-14  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Add some more tests.
	* sysdeps/ieee754/dbl-64/s_fma.c (__fma): Handle underflows
	correctly.

2010-10-13  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Some more fmaf and fma tests.
	* sysdeps/i386/i686/multiarch/s_fma.c: Include ldbl-96 version
	instead of dbl-64.
	* sysdeps/i386/fpu/bits/mathinline.h (fma, fmaf, fmal): Remove
	inlines.
	* sysdeps/ieee754/ldbl-96/s_fma.c: New file.
	* sysdeps/ieee754/dbl-64/s_fma.c (__fma): Fix exponent adjustment
	if one of x and y is very large and the other is subnormal.
	* sysdeps/s390/fpu/s_fmaf.c: New file.
	* sysdeps/s390/fpu/s_fma.c: New file.
	* sysdeps/powerpc/fpu/s_fmaf.S: New file.
	* sysdeps/powerpc/fpu/s_fma.S: New file.
	* sysdeps/powerpc/powerpc32/fpu/s_fma.S: New file.
	* sysdeps/powerpc/powerpc64/fpu/s_fma.S: New file.
	* sysdeps/unix/sysv/linux/s390/fpu/s_fma.c: New file.

2010-10-12  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Add some more fmaf tests, add
	fma tests.
	* sysdeps/ieee754/dbl-64/s_fmaf.c (__fmaf): Fix Inf/Nan check.
	* sysdeps/ieee754/dbl-64/s_fma.c: New file.
	* sysdeps/i386/i686/multiarch/s_fma.c: Include
	sysdeps/ieee754/dbl-64/s_fma.c instead of math/s_fma.c.
	* sysdeps/x86_64/multiarch/s_fma.c: Likewise.
	* sysdeps/ieee754/ldbl-opt/s_fma.c: Likewise.
	* sysdeps/ieee754/ldbl-128/s_fma.c: New file.

2010-10-07  Jakub Jelinek  <jakub@redhat.com>

	[BZ #3268]
	* math/libm-test.inc (fma_test): Add 2 fmaf tests.
	* sysdeps/ieee754/dbl-64/s_fmaf.c: New file.
	* sysdeps/i386/i686/multiarch/s_fmaf.c: Include
	sysdeps/ieee754/dbl-64/s_fmaf.c instead of math/s_fmaf.c.
	* sysdeps/x86_64/multiarch/s_fmaf.c: Likewise.
	* include/fenv.h (feupdateenv, fetestexcept): Add libm_hidden_proto.
	* math/feupdateenv.c (feupdateenv): Add libm_hidden_ver.
	* sysdeps/i386/fpu/feupdateenv.c (feupdateenv): Likewise.
	* sysdeps/powerpc/fpu/feupdateenv.c (feupdateenv): Likewise.
	* sysdeps/x86_64/fpu/feupdateenv.c (feupdateenv): Likewise.
	* sysdeps/sparc/fpu/feupdateenv.c (feupdateenv): Likewise.
	* sysdeps/ia64/fpu/feupdateenv.c (feupdateenv): Add libm_hidden_def.
	* sysdeps/s390/fpu/feupdateenv.c (feupdateenv): Likewise.
	* math/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/ia64/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/i386/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/s390/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/powerpc/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/x86_64/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/sparc/fpu/ftestexcept.c (fetestexcept): Likewise.
	* sysdeps/sh/sh4/fpu/ftestexcept.c (fetestexcept): Likewise.

2010-10-20  Michael B. Brutman  <brutman@us.ibm.com>

	* sysdeps/powerpc/dl-procinfo.c: Add support for ppca2 platform
	* sysdeps/powerpc/dl-procinfo.h: Add support for ppca2 platform
	* sysdeps/powerpc/powerpc32/a2/memcpy.S: New file.
	* sysdeps/powerpc/powerpc64/a2/memcpy.S: Likewise.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/a2/Implies: New
	submachine.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/a2/Implies: Likewise.

2010-05-01  Alan Modra  <amodra@gmail.com>

	* sysdeps/powerpc/powerpc32/power4/memcmp.S: Correct cfi for r24.
	* sysdeps/powerpc/powerpc64/bsd-_setjmp.S: Move contents..
	* sysdeps/powerpc/powerpc64/bsd-setjmp.S: ..and these too..
	* sysdeps/powerpc/powerpc64/setjmp.S: ..to here..
	* sysdeps/powerpc/powerpc64/setjmp-common.S: ..and here, with some
	tidying.  Don't tail-call __sigjmp_save for static lib.
	* sysdeps/powerpc/powerpc64/sysdep.h (SAVE_ARG, REST_ARG): Correct
	save location.
	(CFI_SAVE_ARG, CFI_REST_ARG): New macros.
	(CALL_MCOUNT): Add eh info, and nop after bl.
	(TAIL_CALL_SYSCALL_ERROR): New macro.
	(PSEUDO_RET): Use it.
	* sysdeps/powerpc/powerpc64/dl-trampoline.S (_dl_runtime_resolve):
	Correct save location of integer regs and cr.
	(_dl_profile_resolve): Correct cr save location.  Delete nops
	after bl when SHARED.  Reduce cfi size a little by better
	placement of cfi directives.
	* sysdeps/powerpc/powerpc64/fpu/s_copysign.S (__copysign): Don't
	make a stack frame.  Instead use parm save area as a temp.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/brk.S (__brk): Don't
	make a stack frame.  Use TAIL_CALL_SYSCALL_ERROR.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/clone.S (__clone):
	Don't make a stack frame for parent, use parm save area.
	Increase child stack frame to 112 bytes.  Don't save unused reg,
	and adjust reg usage.  Set up cfi on error recovery and
	epilogue of parent, and use TAIL_CALL_SYSCALL_ERROR, PSEUDO_RET.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/makecontext.S
	(__makecontext): Add dummy nop after jump to exit.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/socket.S (__socket):
	Use correct parm save area and cr save, reduce stack frame.
	Correct cfi for possible PSEUDO_RET frame setup.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/vfork.S (__vfork):
	Branch to local label emitted by PSEUDO_RET rather than
	__syscall_error.

2010-06-15  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power6/fpu/s_copysign.S: New file.
	* sysdeps/powerpc/powerpc32/power6/fpu/s_copysignf.S: New file.
	* sysdeps/powerpc/powerpc64/power6/fpu/s_copysign.S: New file.
	* sysdeps/powerpc/powerpc64/power6/fpu/s_copysignf.S: New file.

2010-08-19  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/memchr.S: New file.
	* sysdeps/powerpc/powerpc32/power7/memrchr.S: New file.
	* sysdeps/powerpc/powerpc32/power7/rawmemchr.S: New file.
	* sysdeps/powerpc/powerpc32/power7/strchr.S: New file.
	* sysdeps/powerpc/powerpc32/power7/strchrnul.S: New file.
	* sysdeps/powerpc/powerpc32/power7/strlen.S: New file.
	* sysdeps/powerpc/powerpc32/power7/strnlen.S: New file.
	* sysdeps/powerpc/powerpc64/power7/memchr.S: New file.
	* sysdeps/powerpc/powerpc64/power7/memrchr.S: New file.
	* sysdeps/powerpc/powerpc64/power7/rawmemchr.S: New file.
	* sysdeps/powerpc/powerpc64/power7/strchr.S: New file.
	* sysdeps/powerpc/powerpc64/power7/strchrnul.S: New file.
	* sysdeps/powerpc/powerpc64/power7/strlen.S: New file.
	* sysdeps/powerpc/powerpc64/power7/strnlen.S: New file.

2010-06-21  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/970/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc32/power5/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc32/power5+/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc32/power6x/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc64/970/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc64/power5/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc64/power5+/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc64/power6x/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/970/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power4/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power5/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power5+/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power6/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power6x/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power7/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/970/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power4/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power5/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power5+/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power6/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power6x/fpu/Implies: Remove.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power7/fpu/Implies: Remove.
	* sysdeps/powerpc/powerpc32/970/Implies: Point to power4.
	* sysdeps/powerpc/powerpc32/power5/Implies: Point to power4.
	* sysdeps/powerpc/powerpc32/power5+/Implies: Point to power5.
	* sysdeps/powerpc/powerpc32/power6/Implies: Point to power5+.
	* sysdeps/powerpc/powerpc32/power6x/Implies: Point to power6.
	* sysdeps/powerpc/powerpc64/970/Implies: Point to power4.
	* sysdeps/powerpc/powerpc64/power5/Implies: Point to power4.
	* sysdeps/powerpc/powerpc64/power5+/Implies: Point to power5.
	* sysdeps/powerpc/powerpc64/power6/Implies: Point to power5+.
	* sysdeps/powerpc/powerpc64/power6x/Implies: Point to power6.
	* sysdeps/powerpc/powerpc32/power7/Implies: New file.
	* sysdeps/powerpc/powerpc64/power7/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/970/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/cell/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power4/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power5/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power6/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power6x/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc32/power7/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/970/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/cell/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power4/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power5/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power6/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power6x/Implies: New file.
	* sysdeps/unix/sysv/linux/powerpc/powerpc64/power7/Implies: New file.

2010-06-10  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/memcmp.S: New file
	* sysdeps/powerpc/powerpc64/power7/memcmp.S: New file.
	* sysdeps/powerpc/powerpc32/power7/strncmp.S: New file.
	* sysdeps/powerpc/powerpc64/power7/strncmp.S: New file.

2010-05-24  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/memset.S: POWER7 32-bit memset fix.

2010-05-28  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/powerpc/powerpc32/power7/memcpy.S: Exchange srdi for srwi.

2010-05-17  Luis Machado  <luisgpm@br.ibm.com>

	POWER7 optimizations.
	* sysdeps/powerpc/powerpc64/power7/memset.S: New file.
	* sysdeps/powerpc/powerpc32/power7/memset.S: New file.

2010-10-26  Peter Bergner  <bergner@vnet.ibm.com>

	* elf/rtld.c (process_envvars): Added conditional EXTRA_LD_ENVVARS_11
	macro which allows overriding of AT_PLATFORM using an environment
	variable.
	* sysdeps/unix/sysv/linux/powerpc/dl-librecon.h: New file adding
	definition for the EXTRA_LD_ENVVARS_11 macro.

2010-10-06  Ulrich Drepper  <drepper@gmail.com>

	* string/bug-strstr1.c: New file.
	* string/Makefile: Add rules to build and run bug-strstr1.

2010-10-05  Eric Blake  <eblake@redhat.com>

	[BZ #12092]
	* string/str-two-way.h (two_way_long_needle): Always clear memory
	when skipping input due to the shift table.

2010-10-03  Ulrich Drepper  <drepper@gmail.com>

	[BZ #12077]
	* sysdeps/x86_64/strcmp.S: Fix handling of remaining bytes in buffer
	for strncmp.
	* string/stratcliff.c: Add tests for strcmp and strncmp.
	* wcsmbs/wcsatcliff.c: Adjust for stratcliff change.

2010-08-19  Andreas Schwab  <schwab@redhat.com>

	* sysdeps/i386/i686/multiarch/strspn.S [!SHARED]: Fix SSE4.2 check.

2010-08-06  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/getlogin_r.c (__getlogin_r_loginuid):
	Also fail if tpwd after pwuid call is NULL.

2010-06-21  Andreas Schwab <schwab@redhat.com>

	* sysdeps/unix/sysv/linux/getlogin_r.c (__getlogin_r_loginuid):
	Restore proper fallback handling.

2010-06-19  Ulrich Drepper  <drepper@redhat.com>

	* sysdeps/unix/sysv/linux/getlogin_r.c (__getlogin_r_loginuid): Handle
	OOM in getpwuid_r correctly.  Return error number when the caller
	should return, otherwise -1.
	(getlogin_r): Adjust to return also for result of __getlogin_r_loginuid
	call returning > 0 value.
	* sysdeps/unix/sysv/linux/getlogin.c (getlogin): Likewise.

2010-07-27  Andreas Schwab  <schwab@redhat.com>

	* version.h (VERSION): Bump for 2.12.1 release.

2010-06-02  Kirill A. Shutemov  <kirill@shutemov.name>

	* elf/dl-reloc.c: Flush cache after solving TEXTRELs if arch
	requires it.

2010-06-02  Andreas Schwab  <schwab@redhat.com>

	* nis/nss_nis/nis-initgroups.c (get_uid): Properly resize buffer.

2010-06-07  Jakub Jelinek  <jakub@redhat.com>

	* libio/stdio.h (sscanf, vsscanf): Use __REDIRECT_NTH instead of
	__REDIRECT followed by __THROW.
	* wcsmbs/wchar.h (swscanf, vswscanf): Likewise.
	* posix/getopt.h (getopt): Likewise.

2010-05-26  H.J. Lu  <hongjiu.lu@intel.com>

	[BZ #11640]
	* sysdeps/x86_64/multiarch/init-arch.c (__init_cpu_features):
	Properly check family and model.

2010-05-26  Takashi Yoshii  <takashi.yoshii.zj@renesas.com>

	* sysdeps/unix/sysv/linux/sh/sh4/register-dump.h: Fix iov[] size.

2010-05-21  Ulrich Drepper  <drepper@redhat.com>

	* elf/dl-runtime.c (_dl_profile_fixup): Don't crash on unresolved weak
	symbol reference.

2010-05-19  Andreas Schwab  <schwab@redhat.com>

	* elf/dl-runtime.c (_dl_fixup): Don't crash on unresolved weak
	symbol reference.

2010-05-21  Andreas Schwab  <schwab@redhat.com>

	* sysdeps/unix/sysv/linux/Makefile (sysdep_routines): Add recvmmsg
	and internal_recvmmsg.
	* sysdeps/unix/sysv/linux/recvmmsg.c: New file.
	* sysdeps/unix/sysv/linux/internal_recvmmsg.S: New file.
	* sysdeps/unix/sysv/linux/socketcall.h (SOCKOP_recvmmsg): Define.
	* sysdeps/unix/sysv/linux/syscalls.list (recvmmsg): Remove.

2010-05-21  Andreas Schwab  <schwab@redhat.com>

	* sunrpc/clnt_tcp.c (clnttcp_control): Add missing break.
	* sunrpc/clnt_udp.c (clntudp_control): Likewise.
	* sunrpc/clnt_unix.c (clntunix_control): Likewise.

2010-05-20  Andreas Schwab  <schwab@redhat.com>

	* sysdeps/unix/sysv/linux/sys/timex.h: Use __REDIRECT_NTH.

2010-05-12  Andrew Stubbs  <ams@codesourcery.com>

	* sysdeps/sh/sh4/fpu/feholdexcpt.c (feholdexcept): Really disable all
	exceptions.  Return 0.

2010-05-07  Roland McGrath  <roland@redhat.com>

	* elf/ldconfig.c (main): Add a const.

2010-05-06  Ulrich Drepper  <drepper@redhat.com>

	* nss/getent.c (idn_flags): Default to AI_IDN|AI_CANONIDN.
	(args_options): Add no-idn option.
	(ahosts_keys_int): Add idn_flags to ai_flags.
	(parse_option): Handle 'i' option to clear idn_flags.

	* malloc/malloc.c (_int_free): Possible race in the most recently
	added check.  Only act on the data if no current modification
	happened.

2009-11-06  Petr Baudis <pasky@suse.cz>

	* include/sys/uio.h: Change __vector to __iovec to avoid clash
	with altivec.


See ChangeLog.17 for earlier changes.
