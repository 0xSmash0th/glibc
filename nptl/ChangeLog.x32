2012-05-15  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_lock): Load
	futex pointer into RDI_LP.
	(lll_robust_lock): Likewise.
	(lll_cond_lock): Likewise.
	(lll_robust_cond_lock): Likewise.
	(lll_timedlock): Likewise.
	(lll_robust_timedlock): Likewise.
	(lll_unlock): Likewise.
	(lll_robust_unlock): Likewise.

2012-05-15  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (lll_lock): Use
	RSP_LP to operate on stack.
	(lll_robust_lock): Likewise.
	(lll_cond_lock): Likewise.
	(lll_robust_cond_lock): Likewise.
	(lll_timedlock): Likewise.
	(lll_robust_timedlock): Likewise.
	(lll_unlock): Likewise.
	(lll_robust_unlock): Likewise.

2012-05-14  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/tls.h (tcbhead_t): Remove __x86_64__ check.
	Align rtld_savespace_sse to 32 bytes.

2012-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/x32/tls.h (CALL_THREAD_FCT): Add some
	comments.

2012-05-10  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/tls.h (THREAD_SELF): Replace movq/%q0 with
	mov/%0.
	(THREAD_SETMEM): Use uint64_t on 64-bit integer.
	(THREAD_SETMEM_NC): Likewise.

	* sysdeps/x86_64/x32/tls.h (THREAD_SELF): Removed.

2012-05-08  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/x32/shlib-versions: Replace GLIBC_2.11 with
	GLIBC_2.16.

2012-04-28  H.J. Lu  <hongjiu.lu@intel.com>

	* shlib-versions: Move x86_64-.*-linux.* to ...
	* sysdeps/x86_64/64/shlib-versions: Here.  New file.
	* sysdeps/x86_64/x32/shlib-versions: New file.

2012-04-13  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/tls.h (tcbhead_t): Check __ILP32__ instead of
	__LP64__.

2012-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/x32/tls.h: Update copyright year.

2012-03-17  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/cancellation.S: Replace ADD_LP,
	CMP_LP, MOVE_LP, SUB_LP with LP_OP(add), LP_OP(cmp), LP_OP(mov),
	LP_OP(sub).
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Likewise.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.

2012-03-14  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Use CMP_LP
	and R8_LP on dep_mutex.

2011-11-21  H.J. Lu  <hongjiu.lu@intel.com>

	* pthread_create.c (start_thread): Check __PTHREAD_MUTEX_HAVE_PREV
	instead of __WORDSIZE.

	* sysdeps/pthread/pthread.h (PTHREAD_MUTEX_INITIALIZER): Check
	__PTHREAD_MUTEX_HAVE_PREV instead of __WORDSIZE.
	(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP): Likewise.
	(PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP): Likewise.
	(PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP): Likewise.
	(__PTHREAD_RWLOCK_INT_FLAGS_SHARED): New.
	(PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP): Check
	__PTHREAD_RWLOCK_INT_FLAGS_SHARED instead of __WORDSIZE.

	* sysdeps/unix/sysv/linux/x86_64/bits/pthreadtypes.h: Define x32
	__SIZEOF_PTHREAD_XXX_T.
	(__pthread_internal_list): Check __x86_64__ instead of __WORDSIZE.
	(pthread_mutex_t): Likewise.
	(pthread_rwlock_t): Likewise. 
	(__PTHREAD_RWLOCK_INT_FLAGS_SHARED): New.  Defined if __x86_64__
	is defined.

	* sysdeps/x86_64/tls.h: Don't include <bits/wordsize.h>.
	Check __x86_64__ instead of __WORDSIZE.
	(tcbhead_t): Pad rtld_savespace_sse to 32byte aligned.
	(THREAD_SETMEM): Use long long on 64bit integer.
	(THREAD_SETMEM_NC): Likewise.

	* sysdeps/x86_64/x32/tls.h: New.

2011-11-21  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/x86_64/pthreaddef.h (CURRENT_STACK_FRAME): Use
	RSP_LP.

2011-11-21  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/lowlevellock.h (__NR_futex): New.
	(SYS_futex): Use it.
	(LLL_STUB_UNWIND_INFO_START): Align label to LP_SIZE instead
	of 8.
	(LLL_STUB_UNWIND_INFO_END): Likewise.  Use RDX_LP.

2011-11-21  H.J. Lu  <hongjiu.lu@intel.com>

	* unwind.c (unwind_stop): Cast _Unwind_GetCFA return to
	_Unwind_Ptr first.

2011-11-21  H.J. Lu  <hongjiu.lu@intel.com>

	* sysdeps/unix/sysv/linux/x86_64/cancellation.S: Use MOVE_LP
	and RDI_LP.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_broadcast.S: Use
	RXX_LP and CMP_LP.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_signal.S: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_timedwait.S: Use
	 RXX_LP and CMP_LP.  Use LP_SIZE and ASM_ADDR on
	 __gcc_personality_v0.
	* sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S: Likewise.

	* sysdeps/unix/sysv/linux/x86_64/pthread_once.S: Use LP_SIZE
	and ASM_ADDR.

	* sysdeps/unix/sysv/linux/x86_64/sem_post.S: Use CMP_LP on
	NWAITERS.

	* sysdeps/unix/sysv/linux/x86_64/sem_timedwait.S: Use ADD_LP
	and SUB_LP on NWAITERS.  Use LP_SIZE and ASM_ADDR on
	__gcc_personality_v0.
	* sysdeps/unix/sysv/linux/x86_64/sem_wait.S: Likewise.
