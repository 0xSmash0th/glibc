/* Which thread is running on an LWP?
   Copyright (C) 2003-2016 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */


/* Given an lwpid_t identifying an LWP, return TD_OK and the
   descriptor of the thread running on it, or a non-TD_OK
   td_err_e code indicating the reason for failure and an
   undefined value that must be ignored.  The caller must
   ensure that __pthread_initialize_minimal has gotten far
   enough; see the comments in infinity_map_lwp2thr.i8 for
   specifics.  */

define libpthread::__lookup_th_unique returns td_err_e, th_unique_t
	argument lwpid_t lwpid

	load I8_TS_REG_OFFSET
	load I8_TS_REG_SIZE
	call procservice::get_register
	bne PS_OK, get_register_failed
	add I8_TS_REG_BIAS
	load TD_OK
	return

get_register_failed:
	load TD_ERR
	return
